{"version":3,"sources":["Components/Stats/Stats.module.css","Components/Section/Section.module.css","Components/Feedback/Feedback.module.css","Components/Section/Section.js","Components/Stats/Stats.js","Components/Feedback/Feedback.js","App.js","index.js"],"names":["module","exports","Section","title","children","className","styles","container","Stats","good","neutral","bad","total","positivePercentage","item","Feedback","options","onLeaveFeedback","buttonOptions","map","button","onClick","type","App","useState","setGood","setNeutral","setBad","countPositiveFeedbackPercentage","Math","round","countTotalFeedback","name","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2IACAA,EAAOC,QAAU,CAAC,KAAO,sB,kBCAzBD,EAAOC,QAAU,CAAC,UAAY,2BAA2B,MAAQ,yB,iBCAjED,EAAOC,QAAU,CAAC,OAAS,2B,6HCSZC,EAPC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,sBAAKC,UAAWC,IAAOC,UAAvB,UACE,oBAAIF,UAAWC,IAAOH,MAAtB,SAA8BA,IAC7BC,M,gBCSUI,EAZD,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACZ,mCACE,qBAAIR,UAAU,iBAAd,UACE,qBAAIA,UAAWC,IAAOQ,KAAtB,mBAAmCL,KACnC,qBAAIJ,UAAWC,IAAOQ,KAAtB,sBAAsCJ,KACtC,qBAAIL,UAAWC,IAAOQ,KAAtB,kBAAkCH,EAAlC,OACA,qBAAIN,UAAWC,IAAOQ,KAAtB,oBAAoCF,KACpC,qBAAIP,UAAWC,IAAOQ,KAAtB,gCAAgDD,W,gBCcvCE,EAnBE,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBACrBC,EAAgBF,EAAQG,KAAI,SAAAL,GAAI,OACpC,wBACET,UAAWC,IAAOc,OAClBC,QAAS,kBAAMJ,EAAgBH,IAC/BQ,KAAK,SAHP,SAMGR,GAFIA,MAKT,OAAO,mCAAGI,KCkCGK,EA9CH,SAAC,GAAgB,EAAdP,QAAe,IAC5B,EAAwBQ,mBAAS,GAAjC,mBAAOf,EAAP,KAAagB,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOd,EAAP,KAAgBgB,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOb,EAAP,KAAYgB,EAAZ,KAcMC,EAAkCC,KAAKC,MAC1CrB,GAAQA,EAAOC,EAAUC,GAAQ,KAE9BoB,EAAqBtB,EAAOC,EAAUC,EAC5C,OACE,qCACE,cAAC,EAAD,CAASR,MAAO,wBAAhB,SACE,cAAC,EAAD,CACEa,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBArBW,SAAAe,GACjB,OAAQA,GACN,IAAK,OACH,OAAOP,GAAQ,SAAAQ,GAAS,OAAIA,EAAY,KAC1C,IAAK,UACH,OAAOP,GAAW,SAAAO,GAAS,OAAIA,EAAY,KAC7C,IAAK,MACH,OAAON,GAAO,SAAAM,GAAS,OAAIA,EAAY,KACzC,QACE,aAeF,cAAC,EAAD,CAAS9B,MAAO,aAAhB,SACG4B,EAAqB,EACpB,cAAC,EAAD,CACEtB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOmB,EACPlB,mBAAoBe,IAGtB,2D,MCtCVM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.8fed0fac.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Stats_item__V-MT6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Section_container__wkNHV\",\"title\":\"Section_title__VsZan\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Feedback_button__zUefN\"};","import React from 'react';\nimport styles from './Section.module.css';\n\nconst Section = ({ title, children }) => (\n  <div className={styles.container}>\n    <h2 className={styles.title}>{title}</h2>\n    {children}\n  </div>\n);\n\nexport default Section;\n","import React from 'react';\nimport styles from './Stats.module.css';\n\nconst Stats = ({ good, neutral, bad, total, positivePercentage }) => (\n  <>\n    <ul className=\"statistic-list\">\n      <li className={styles.item}>Good: {good}</li>\n      <li className={styles.item}>Neutral: {neutral}</li>\n      <li className={styles.item}>Bad: {bad} </li>\n      <li className={styles.item}>Total: {total}</li>\n      <li className={styles.item}>Positive feedback: {positivePercentage}</li>\n    </ul>\n  </>\n);\n\nexport default Stats;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './Feedback.module.css';\n\nconst Feedback = ({ options, onLeaveFeedback }) => {\n  const buttonOptions = options.map(item => (\n    <button\n      className={styles.button}\n      onClick={() => onLeaveFeedback(item)}\n      type=\"button\"\n      key={item}\n    >\n      {item}\n    </button>\n  ));\n  return <>{buttonOptions}</>;\n};\n\nFeedback.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default Feedback;\n","import { useState } from 'react';\nimport Section from './Components/Section/Section';\nimport Stats from './Components/Stats/Stats';\nimport Feedback from './Components/Feedback/Feedback';\nconst App = ({ options }) => {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const onBtnClick = name => {\n    switch (name) {\n      case 'good':\n        return setGood(prevState => prevState + 1);\n      case 'neutral':\n        return setNeutral(prevState => prevState + 1);\n      case 'bad':\n        return setBad(prevState => prevState + 1);\n      default:\n        return;\n    }\n  };\n  const countPositiveFeedbackPercentage = Math.round(\n    (good / (good + neutral + bad)) * 100,\n  );\n  const countTotalFeedback = good + neutral + bad;\n  return (\n    <>\n      <Section title={'Please leave feedback'}>\n        <Feedback\n          options={['good', 'neutral', 'bad']}\n          onLeaveFeedback={onBtnClick}\n        />\n      </Section>\n      <Section title={'Statistics'}>\n        {countTotalFeedback > 0 ? (\n          <Stats\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={countTotalFeedback}\n            positivePercentage={countPositiveFeedbackPercentage}\n          />\n        ) : (\n          <h3>Feedback not given!</h3>\n        )}\n      </Section>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}